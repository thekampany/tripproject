# Generated by Django 4.2.23 on 2025-08-23 19:52

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('tripapp', '0036_badge_threshold_type_badge_threshold_value_and_more'),
    ]

    operations = [
        migrations.AddField(
            model_name='dayprogram',
            name='map_image',
            field=models.ImageField(blank=True, null=True, upload_to='maps/'),
        ),
        migrations.AddField(
            model_name='dayprogram',
            name='overnight_location',
            field=models.CharField(blank=True, help_text='Spend the night in (eg. camping, hotelname, city)', max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='dayprogram',
            name='recorded_weather',
            field=models.JSONField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='dayprogram',
            name='recorded_weather_text',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='link',
            name='category',
            field=models.CharField(blank=True, choices=[('', 'No Category'), ('Transportation', 'Transportation'), ('Lodging', 'Lodging'), ('Food and Drinks', 'Food and Drinks'), ('Activity', 'Activity'), ('Other', 'Other')], default='', max_length=20),
        ),
        migrations.AddField(
            model_name='trip',
            name='use_expenses',
            field=models.BooleanField(default=False, help_text='Off means that we choose not to look at who owes who how much'),
        ),
        migrations.AddField(
            model_name='tripper',
            name='dawarich_api_key',
            field=models.CharField(blank=True, help_text='dawarich-api-key', max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='tripper',
            name='dawarich_url',
            field=models.URLField(blank=True, help_text='Enter dawarich-url including api/v/points if you use Dawarich and want to see locations where you have been displayed on the map', null=True),
        ),
        migrations.AddField(
            model_name='tripper',
            name='immich_api_key',
            field=models.CharField(blank=True, help_text='immich-api-key', max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='tripper',
            name='immich_url',
            field=models.URLField(blank=True, help_text='Enter immich-url in order to see locations where you took a picture plotted on the trip map', null=True),
        ),
        migrations.AddField(
            model_name='tripper',
            name='user',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='badge',
            name='achievement_method',
            field=models.CharField(choices=[('admin_assigned', 'Assigned by your TourAdmin'), ('question_correct', 'Correct Answer to Question'), ('time_based', 'Assigned on a specific date'), ('threshold', 'Assigned when you did something multiple times')], default='admin_assigned', max_length=20),
        ),
        migrations.AlterField(
            model_name='badge',
            name='level',
            field=models.CharField(choices=[('global', 'Global'), ('tribal', 'Tribal'), ('trip', 'Trip')], default='tribal', max_length=20),
        ),
        migrations.AlterField(
            model_name='badge',
            name='threshold_type',
            field=models.CharField(blank=True, choices=[('bingo_answer_uploads', 'Bingo Answer Uploads'), ('correct_answers', 'Correct Answers'), ('image_uploads', 'Image Uploads'), ('tripper_has_api_key', 'User has api integrations configured'), ('log_entries', 'Log Entries'), ('trip_count', 'Trip Count')], help_text='The type of threshold to achieve.', max_length=20, null=True),
        ),
        migrations.AlterField(
            model_name='point',
            name='marker_type',
            field=models.CharField(choices=[('default', 'Default'), ('bed', 'Bed'), ('restaurant', 'Restaurant')], default='default', max_length=20),
        ),
        migrations.AlterField(
            model_name='trip',
            name='country_codes',
            field=models.CharField(blank=True, help_text='A two-letter country code of the country you are visiting. Separate by comma in case of multiple countries', max_length=200, null=True),
        ),
        migrations.CreateModel(
            name='TripperDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document', models.FileField(blank=True, null=True, upload_to='tripper_documents/')),
                ('description', models.TextField(blank=True, null=True)),
                ('category', models.CharField(blank=True, choices=[('', 'No Category'), ('Passport', 'Passport'), ('Visa', 'Visa'), ('Medical', 'Medical'), ('Insurance', 'Insurance'), ('Other', 'Other')], default='', max_length=20)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('tripper', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='tripapp.tripper')),
            ],
        ),
        migrations.CreateModel(
            name='TripExpense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('converted_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('currency', models.CharField(max_length=10)),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('description', models.CharField(blank=True, max_length=30, null=True)),
                ('receipt', models.ImageField(blank=True, null=True, upload_to='receipts/')),
                ('category', models.CharField(blank=True, choices=[('', 'No Category'), ('Transportation', 'Transportation'), ('Lodging', 'Lodging'), ('Food and Drinks', 'Food and Drinks'), ('Activity', 'Activity'), ('Other', 'Other')], default='', max_length=20)),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='expenses', to='tripapp.trip')),
                ('tripper', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tripapp.tripper')),
            ],
        ),
        migrations.CreateModel(
            name='ScheduledItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('', 'No Category'), ('Transportation', 'Transportation'), ('Lodging', 'Lodging'), ('Food and Drinks', 'Food and Drinks'), ('Activity', 'Activity'), ('Other', 'Other')], max_length=50)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('start_address', models.CharField(max_length=255)),
                ('end_address', models.CharField(blank=True, max_length=255, null=True)),
                ('transportation_type', models.CharField(blank=True, choices=[('', 'Not Specified'), ('Airplane', 'Airplane'), ('Bus', 'Bus'), ('Train', 'Train'), ('Taxi', 'Taxi'), ('Other', 'Other')], max_length=50, null=True)),
                ('dayprogram', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scheduled_items', to='tripapp.dayprogram')),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('timestamp', models.DateTimeField()),
                ('tripper', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tripapp.tripper')),
            ],
        ),
        migrations.CreateModel(
            name='ImmichPhotos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('immich_photo_id', models.CharField(max_length=100)),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('timestamp', models.DateTimeField()),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='immich_thumbnails/')),
                ('tripper', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tripapp.tripper')),
            ],
        ),
        migrations.AddField(
            model_name='link',
            name='scheduled_item',
            field=models.ForeignKey(blank=True, help_text='Optional: Associate this link with a specific ScheduledItem.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='links', to='tripapp.scheduleditem'),
        ),
        migrations.CreateModel(
            name='LogEntryLike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('emoji', models.CharField(max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('logentry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='tripapp.logentry')),
                ('tripper', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logentry_likes', to='tripapp.tripper')),
            ],
            options={
                'unique_together': {('logentry', 'tripper', 'emoji')},
            },
        ),
    ]
